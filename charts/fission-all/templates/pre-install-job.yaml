apiVersion: v1
kind: ServiceAccount
metadata:
  name: fission-svc
  namespace: {{ .Release.Namespace }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: fission-crd
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
subjects:
- kind: ServiceAccount
  name: fission-svc
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "fullname" . }}-{{ .Chart.Version }}
  labels:
    # The "release" convention makes it easy to tie a release to all of the
    # Kubernetes resources that were created as part of that release.
    release: {{ .Release.Name }}
    # This makes it easy to audit chart usage.
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app: {{ template "name" . }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 0
  template:
    metadata:
      name: {{ template "fullname" . }}
      labels:
        release: {{ .Release.Name }}
        app: {{ template "name" . }}
    spec:
      restartPolicy: Never
      containers:
      - name: pre-install-job
        image: {{ .Values.preInstallChecksImage }}:latest
        imagePullPolicy: {{ .Values.pullPolicy }}
        command: [ "/pre-install-checks" ]
      serviceAccount: fission-svc